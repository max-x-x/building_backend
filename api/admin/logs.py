from django.contrib import admin
from django.utils.html import format_html
from django.utils.safestring import mark_safe

from api.models.log import Log, LogLevel, LogCategory


@admin.register(Log)
class LogAdmin(admin.ModelAdmin):
    list_display = ('id', 'level_badge', 'category_badge', 'message_short', 'created_at')
    list_filter = ('level', 'category', 'created_at')
    search_fields = ('message',)
    readonly_fields = ('created_at', 'modified_at')
    ordering = ('-created_at',)
    list_per_page = 50
    
    fieldsets = (
        ("üìä –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("level", "category", "message"),
            "classes": ("wide",)
        }),
        ("üìÖ –î–∞—Ç—ã", {
            "fields": ("created_at", "modified_at"),
            "classes": ("collapse",)
        }),
    )
    
    def has_add_permission(self, request):
        return False  # –ó–∞–ø—Ä–µ—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É
    
    def has_change_permission(self, request, obj=None):
        return False  # –ó–∞–ø—Ä–µ—â–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É
    
    def has_delete_permission(self, request, obj=None):
        return request.user.is_superuser  # –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –ª–æ–≥–∏

    def level_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∞ —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º."""
        colors = {
            LogLevel.DEBUG: "#6c757d",      # —Å–µ—Ä—ã–π
            LogLevel.INFO: "#17a2b8",       # –≥–æ–ª—É–±–æ–π
            LogLevel.WARNING: "#ffc107",    # –∂–µ–ª—Ç—ã–π
            LogLevel.ERROR: "#dc3545",      # –∫—Ä–∞—Å–Ω—ã–π
            LogLevel.CRITICAL: "#6f42c1",  # —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
        }
        color = colors.get(obj.level, "#6c757d")
        return format_html(
            '<span style="background-color: {}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: bold;">{}</span>',
            color, obj.get_level_display()
        )
    level_badge.short_description = "–£—Ä–æ–≤–µ–Ω—å"
    level_badge.admin_order_field = "level"

    def category_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ª–æ–≥–∞ —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º."""
        colors = {
            LogCategory.AUTH: "#007bff",           # —Å–∏–Ω–∏–π
            LogCategory.OBJECT: "#28a745",        # –∑–µ–ª–µ–Ω—ã–π
            LogCategory.DELIVERY: "#ffc107",      # –∂–µ–ª—Ç—ã–π
            LogCategory.PRESCRIPTION: "#dc3545",  # –∫—Ä–∞—Å–Ω—ã–π
            LogCategory.WORK_PLAN: "#17a2b8",     # –≥–æ–ª—É–±–æ–π
            LogCategory.ACTIVATION: "#6f42c1",   # —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
            LogCategory.USER: "#fd7e14",          # –æ—Ä–∞–Ω–∂–µ–≤—ã–π
            LogCategory.AREA: "#20c997",          # –±–∏—Ä—é–∑–æ–≤—ã–π
            LogCategory.SYSTEM: "#6c757d",        # —Å–µ—Ä—ã–π
            LogCategory.API: "#e83e8c",           # —Ä–æ–∑–æ–≤—ã–π
        }
        color = colors.get(obj.category, "#6c757d")
        return format_html(
            '<span style="background-color: {}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px;">{}</span>',
            color, obj.get_category_display()
        )
    category_badge.short_description = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
    category_badge.admin_order_field = "category"

    def message_short(self, obj):
        """–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–≥–∞."""
        if len(obj.message) > 100:
            return f"{obj.message[:100]}..."
        return obj.message
    message_short.short_description = "–°–æ–æ–±—â–µ–Ω–∏–µ"