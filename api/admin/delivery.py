from django.contrib import admin
from django.utils.html import format_html
from django.utils.safestring import mark_safe

from api.models.delivery import Delivery, Invoice, Material, LabOrder


class MaterialInline(admin.TabularInline):
    model = Material
    extra = 0
    readonly_fields = ("uuid_material", "created_at", "modified_at")
    fields = ("material_name", "material_quantity", "material_size", "material_volume", "material_netto", "is_confirmed")
    classes = ("collapse",)


class InvoiceInline(admin.TabularInline):
    model = Invoice
    extra = 0
    readonly_fields = ("uuid_invoice", "created_at", "modified_at")
    fields = ("pdf_url", "folder_url", "data")
    classes = ("collapse",)


@admin.register(Delivery)
class DeliveryAdmin(admin.ModelAdmin):
    list_display = ("id", "object", "status_badge", "planned_date", "created_by", "created_at")
    list_filter = ("status", "planned_date", "created_at")
    search_fields = ("object__name", "notes", "created_by__email")
    readonly_fields = ("uuid_delivery", "created_at", "modified_at")
    autocomplete_fields = ("object", "created_by")
    list_per_page = 25
    inlines = [InvoiceInline]

    fieldsets = (
        ("üöö –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("object", "planned_date", "notes", "status"),
            "classes": ("wide",)
        }),
        ("üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ", {
            "fields": ("created_by",),
            "classes": ("wide",)
        }),
        ("üîß –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("uuid_delivery", "created_at", "modified_at"),
            "classes": ("collapse",)
        }),
    )

    def status_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞–≤–∫–∏ —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º."""
        colors = {
            "scheduled": "#6c757d",    # —Å–µ—Ä—ã–π
            "received": "#ffc107",      # –∂–µ–ª—Ç—ã–π
            "accepted": "#28a745",      # –∑–µ–ª–µ–Ω—ã–π
            "rejected": "#dc3545",      # –∫—Ä–∞—Å–Ω—ã–π
            "sent_to_lab": "#17a2b8",   # –≥–æ–ª—É–±–æ–π
            "awaiting_lab": "#6f42c1",  # —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
        }
        color = colors.get(obj.status, "#6c757d")
        return format_html(
            '<span style="background-color: {}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: bold;">{}</span>',
            color, obj.get_status_display()
        )
    status_badge.short_description = "–°—Ç–∞—Ç—É—Å"
    status_badge.admin_order_field = "status"


@admin.register(Invoice)
class InvoiceAdmin(admin.ModelAdmin):
    list_display = ("id", "delivery", "object", "pdf_url_short", "folder_url_short", "created_at")
    list_filter = ("created_at",)
    search_fields = ("delivery__object__name", "pdf_url", "folder_url")
    readonly_fields = ("uuid_invoice", "created_at", "modified_at")
    autocomplete_fields = ("object", "delivery")
    list_per_page = 25
    inlines = [MaterialInline]

    fieldsets = (
        ("üìÑ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("object", "delivery", "pdf_url", "folder_url"),
            "classes": ("wide",)
        }),
        ("üìä –î–∞–Ω–Ω—ã–µ", {
            "fields": ("data",),
            "classes": ("collapse",)
        }),
        ("üîß –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("uuid_invoice", "created_at", "modified_at"),
            "classes": ("collapse",)
        }),
    )

    def pdf_url_short(self, obj):
        """–°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π URL PDF."""
        if obj.pdf_url and len(obj.pdf_url) > 30:
            return f"{obj.pdf_url[:30]}..."
        return obj.pdf_url or "‚Äî"
    pdf_url_short.short_description = "PDF URL"

    def folder_url_short(self, obj):
        """–°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π URL –ø–∞–ø–∫–∏."""
        if obj.folder_url and len(obj.folder_url) > 30:
            return f"{obj.folder_url[:30]}..."
        return obj.folder_url or "‚Äî"
    folder_url_short.short_description = "–ü–∞–ø–∫–∞ URL"


@admin.register(Material)
class MaterialAdmin(admin.ModelAdmin):
    list_display = ("id", "delivery", "invoice", "material_name", "material_quantity", "is_confirmed_badge", "created_at")
    list_filter = ("is_confirmed", "created_at")
    search_fields = ("material_name", "delivery__object__name")
    readonly_fields = ("uuid_material", "created_at", "modified_at")
    autocomplete_fields = ("delivery", "invoice")
    list_per_page = 25

    fieldsets = (
        ("üì¶ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("delivery", "invoice", "material_name"),
            "classes": ("wide",)
        }),
        ("üìè –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏", {
            "fields": ("material_quantity", "material_size", "material_volume", "material_netto"),
            "classes": ("wide",)
        }),
        ("‚úÖ –°—Ç–∞—Ç—É—Å", {
            "fields": ("is_confirmed",),
            "classes": ("wide",)
        }),
        ("üîß –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("uuid_material", "created_at", "modified_at"),
            "classes": ("collapse",)
        }),
    )

    def is_confirmed_badge(self, obj):
        """–°—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞."""
        if obj.is_confirmed:
            return format_html('<span style="color: #28a745;">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</span>')
        return format_html('<span style="color: #ffc107;">‚è≥ –û–∂–∏–¥–∞–µ—Ç</span>')
    is_confirmed_badge.short_description = "–°—Ç–∞—Ç—É—Å"
    is_confirmed_badge.admin_order_field = "is_confirmed"


@admin.register(LabOrder)
class LabOrderAdmin(admin.ModelAdmin):
    list_display = ("id", "delivery", "status_badge", "created_at")
    list_filter = ("status", "created_at")
    search_fields = ("delivery__object__name",)
    readonly_fields = ("uuid_lab_order", "created_at", "modified_at")
    autocomplete_fields = ("delivery",)
    list_per_page = 25

    fieldsets = (
        ("üß™ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("delivery", "status"),
            "classes": ("wide",)
        }),
        ("üìã –≠–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–∞", {
            "fields": ("items",),
            "classes": ("wide",)
        }),
        ("üîß –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {
            "fields": ("uuid_lab_order", "created_at", "modified_at"),
            "classes": ("collapse",)
        }),
    )

    def status_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º."""
        colors = {
            "pending": "#ffc107",    # –∂–µ–ª—Ç—ã–π
            "sent": "#17a2b8",      # –≥–æ–ª—É–±–æ–π
            "completed": "#28a745",  # –∑–µ–ª–µ–Ω—ã–π
            "failed": "#dc3545",    # –∫—Ä–∞—Å–Ω—ã–π
        }
        color = colors.get(obj.status, "#6c757d")
        return format_html(
            '<span style="background-color: {}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: bold;">{}</span>',
            color, obj.get_status_display()
        )
    status_badge.short_description = "–°—Ç–∞—Ç—É—Å"
    status_badge.admin_order_field = "status"
