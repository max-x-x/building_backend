# Generated by Django 5.2.6 on 2025-09-26 13:07

import api.models.user
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(blank=True, max_length=200, verbose_name='ФИО')),
                ('phone', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator('^[0-9+()\\-\\s]{6,}$', 'Некорректный телефон')], verbose_name='Телефон')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('ssk', 'ССК (Служба строительного контроля)'), ('iko', 'ИКО (Инспектор контрольного органа)'), ('foreman', 'Прораб')], default='foreman', max_length=16, verbose_name='Роль')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал (админка)')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'auth_user_custom',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', api.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='Email')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('ssk', 'ССК (Служба строительного контроля)'), ('iko', 'ИКО (Инспектор контрольного органа)'), ('foreman', 'Прораб')], max_length=16, verbose_name='Роль')),
                ('token', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Токен-инвайта')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('expires_at', models.DateTimeField(default=api.models.user._invite_expires_default, verbose_name='Истекает')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Принят')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пригласил')),
            ],
            options={
                'verbose_name': 'Приглашение',
                'verbose_name_plural': 'Приглашения',
                'unique_together': {('email', 'token')},
            },
        ),
        migrations.CreateModel(
            name='RefreshToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('jti', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='JTI')),
                ('token', models.TextField(verbose_name='Токен (или хэш)')),
                ('user_agent', models.CharField(blank=True, max_length=256, verbose_name='User-Agent')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('expires_at', models.DateTimeField(verbose_name='Истекает')),
                ('revoked', models.BooleanField(default=False, verbose_name='Отозван')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refresh_tokens', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Refresh-токен',
                'verbose_name_plural': 'Refresh-токены',
                'indexes': [models.Index(fields=['user', 'revoked', 'expires_at'], name='api_refresh_user_id_f5a1b6_idx')],
            },
        ),
    ]
