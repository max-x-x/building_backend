# Generated by Django 5.2.6 on 2025-09-29 00:19

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_notification_objectactivation_prescription_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_memo', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID памятки')),
                ('title', models.CharField(max_length=300, verbose_name='Название')),
                ('pdf_url', models.URLField(verbose_name='URL PDF')),
            ],
            options={
                'verbose_name': 'Памятка',
                'verbose_name_plural': 'Памятки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='constructionobject',
            name='status',
            field=models.CharField(choices=[('draft', 'Черновик'), ('activation_pending', 'Ожидает активации'), ('active', 'Активен'), ('suspended', 'Приостановлен'), ('completed', 'Завершён')], default='draft', max_length=32, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='type',
            field=models.CharField(choices=[('activation_requested', 'Запрошена активация'), ('iko_assigned', 'Назначен ИКО'), ('status_changed', 'Смена статуса объекта'), ('suspended', 'Объект приостановлен'), ('resumed', 'Объект возобновлён'), ('completed', 'Объект завершён')], max_length=32, verbose_name='Тип'),
        ),
        migrations.CreateModel(
            name='DailyChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_daily', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID чек-листа')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Данные чек-листа')),
                ('pdf_url', models.URLField(verbose_name='URL PDF')),
                ('photos_folder_url', models.URLField(blank=True, verbose_name='URL папки с фото')),
                ('status', models.CharField(choices=[('submitted', 'Отправлен'), ('approved', 'Принят'), ('rejected', 'Отклонён')], default='submitted', max_length=16, verbose_name='Статус')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата проверки')),
                ('review_comment', models.TextField(blank=True, verbose_name='Комментарий проверки')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='daily_reports', to=settings.AUTH_USER_MODEL, verbose_name='Автор (прораб)')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_checklists', to='api.constructionobject', verbose_name='Объект')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Проверил (ССК)')),
            ],
            options={
                'verbose_name': 'Ежедневный чек-лист',
                'verbose_name_plural': 'Ежедневные чек-листы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_delivery', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID поставки')),
                ('planned_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('status', models.CharField(choices=[('scheduled', 'Запланирована'), ('received', 'Получена'), ('accepted', 'Принята ССК'), ('rejected', 'Отклонена ССК'), ('sent_to_lab', 'Отправлена в лабораторию'), ('awaiting_lab', 'Ожидание результатов')], default='scheduled', max_length=20, verbose_name='Статус')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deliveries_created', to=settings.AUTH_USER_MODEL, verbose_name='Инициатор (ССК)')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='api.constructionobject', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Поставка',
                'verbose_name_plural': 'Поставки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExecDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_execdoc', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID сборника ИД')),
                ('kind', models.CharField(choices=[('general', 'Общее'), ('activation', 'Активация'), ('completion', 'Завершение'), ('other', 'Другое')], default='general', max_length=32, verbose_name='Тип сборника')),
                ('pdf_url', models.URLField(verbose_name='URL PDF сборника')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exec_docs', to='api.constructionobject', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Сборник исполнительной документации',
                'verbose_name_plural': 'Сборники ИД',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_folder', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID папки')),
                ('name', models.CharField(max_length=255, verbose_name='Название папки')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='api.constructionobject', verbose_name='Объект')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='api.folder', verbose_name='Родительская папка')),
            ],
            options={
                'verbose_name': 'Папка',
                'verbose_name_plural': 'Папки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_document', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID файла')),
                ('name', models.CharField(max_length=255, verbose_name='Название файла')),
                ('url', models.URLField(verbose_name='URL файла')),
                ('size_bytes', models.BigIntegerField(blank=True, null=True, verbose_name='Размер, байт')),
                ('content_type', models.CharField(blank=True, max_length=128, verbose_name='MIME-тип')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.constructionobject', verbose_name='Объект')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='api.folder', verbose_name='Папка')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_invoice', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID накладной')),
                ('pdf_url', models.URLField(verbose_name='URL PDF/фото накладной')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Распознанные данные')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='api.delivery', verbose_name='Поставка')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='api.constructionobject', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Накладная/ТТН',
                'verbose_name_plural': 'Накладные/ТТН',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LabOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_lab_order', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID заказа в лабораторию')),
                ('items', models.JSONField(blank=True, default=list, verbose_name='Отобранные образцы')),
                ('status', models.CharField(choices=[('sent', 'Отправлено'), ('done', 'Готово')], default='sent', max_length=16, verbose_name='Статус')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='api.delivery', verbose_name='Поставка')),
            ],
            options={
                'verbose_name': 'Лабораторное исследование',
                'verbose_name_plural': 'Лабораторные исследования',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ObjectRoleAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_audit', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID аудита')),
                ('field', models.CharField(choices=[('ssk', 'ССК'), ('foreman', 'Прораб'), ('iko', 'ИКО')], max_length=16, verbose_name='Поле')),
                ('comment', models.CharField(blank=True, max_length=500, verbose_name='Комментарий')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_role_changes', to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено')),
                ('new_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Новый пользователь')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_audit', to='api.constructionobject', verbose_name='Объект')),
                ('old_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Старый пользователь')),
            ],
            options={
                'verbose_name': 'Аудит ролей объекта',
                'verbose_name_plural': 'Аудит ролей объектов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_ticket', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID тикета')),
                ('text', models.TextField(verbose_name='Текст обращения')),
                ('status', models.CharField(choices=[('open', 'Открыт'), ('in_progress', 'В работе'), ('done', 'Закрыт')], default='open', max_length=16, verbose_name='Статус')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='api.constructionobject', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Тикет',
                'verbose_name_plural': 'Тикеты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_work', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID работы')),
                ('title', models.CharField(max_length=300, verbose_name='Название работы/задачи')),
                ('status', models.CharField(choices=[('open', 'Открыта'), ('in_progress', 'В работе'), ('done', 'Выполнена')], default='open', max_length=16, verbose_name='Статус')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='works', to='api.constructionobject', verbose_name='Объект')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works_reviewer', to=settings.AUTH_USER_MODEL, verbose_name='Проверяющий')),
            ],
            options={
                'verbose_name': 'Работа/задача по объекту',
                'verbose_name_plural': 'Работы/задачи по объектам',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkPlanChangeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_wp_change', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID заявки на изменение')),
                ('proposed_doc_url', models.URLField(verbose_name='Предлагаемый документ')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('approved', 'Принято'), ('rejected', 'Отклонено')], default='pending', max_length=16, verbose_name='Статус')),
                ('decided_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Кто принял решение')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_requests', to='api.workplan', verbose_name='Перечень работ')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Кто запросил')),
            ],
            options={
                'verbose_name': 'Заявка на изменение перечня',
                'verbose_name_plural': 'Заявки на изменения перечня',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkPlanVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('uuid_wp_version', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID версии перечня')),
                ('version', models.PositiveIntegerField(verbose_name='№ версии')),
                ('doc_url', models.URLField(verbose_name='URL документа')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='api.workplan', verbose_name='Перечень работ')),
            ],
            options={
                'verbose_name': 'Версия перечня работ',
                'verbose_name_plural': 'Версии перечня работ',
                'ordering': ['-version'],
                'unique_together': {('plan', 'version')},
            },
        ),
    ]
